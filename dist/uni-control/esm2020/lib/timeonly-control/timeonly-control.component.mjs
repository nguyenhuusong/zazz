import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "primeng/calendar";
import * as i2 from "@angular/common";
import * as i3 from "@angular/forms";
export class TimeonlyControlComponent {
    constructor() {
        this.submit = false;
        this.callbackTimeonly = new EventEmitter();
        this.classInput = false;
    }
    ngOnInit() {
    }
    onChangeValue(value, field_name, element) {
        this.modelFields[field_name].error = this.modelFields[field_name].isRequire && !this.element.columnValue ? true : false;
        this.modelFields[field_name].message = this.modelFields[field_name].error ? 'Trường bắt buộc nhập !' : '';
        this.callbackTimeonly.emit({
            event: element,
            value: value,
            field: field_name
        });
    }
    inputFocus(event) {
        if (!this.element.columnValue) {
            this.classInput = true;
        }
    }
    inputFocusOut(event) {
        if (this.element.columnValue) {
            this.classInput = true;
        }
        else {
            this.classInput = false;
        }
    }
}
TimeonlyControlComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.0", ngImport: i0, type: TimeonlyControlComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
TimeonlyControlComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.0.0", type: TimeonlyControlComponent, selector: "lib-timeonly-control", inputs: { element: "element", modelFields: "modelFields", dataView: "dataView", detail: "detail", submit: "submit" }, outputs: { callbackTimeonly: "callbackTimeonly" }, ngImport: i0, template: "<div class=\"group-date\" [ngClass]=\" element.columnValue ? 'valid' : 'invalid' \">\n    <label class=\"text-nowrap label-text\">{{element.columnLabel}} <span style=\"color:red\"\n            *ngIf=\"element.isRequire\">*</span></label>\n    <div>\n        <p-calendar placeholder=\"DD/MM/YYYY\" [appendTo]=\"'body'\" [baseZIndex]=\"101\" [disabled]=\"element.isDisable\"\n                [(ngModel)]=\"element.columnValue\" [timeOnly]=\"true\" inputId=\"timeonly\"\n                [required]=\"element.isRequire && element.isVisiable && !element.isEmpty\" placeholder=\"HH:mm\" name={{element.field_name}}>\n              </p-calendar>\n\n        <div *ngIf=\"modelFields[element.field_name]?.isRequire && submit && modelFields[element.field_name]?.error\"\n            class=\"alert-validation alert-danger\">\n            <div [hidden]=\"!modelFields[element.field_name]?.error\">\n                {{modelFields[element.field_name]?.message}}\n            </div>\n        </div>\n    </div>\n</div>", styles: [""], components: [{ type: i1.Calendar, selector: "p-calendar", inputs: ["style", "styleClass", "inputStyle", "inputId", "name", "inputStyleClass", "placeholder", "ariaLabelledBy", "iconAriaLabel", "disabled", "dateFormat", "multipleSeparator", "rangeSeparator", "inline", "showOtherMonths", "selectOtherMonths", "showIcon", "icon", "appendTo", "readonlyInput", "shortYearCutoff", "monthNavigator", "yearNavigator", "hourFormat", "timeOnly", "stepHour", "stepMinute", "stepSecond", "showSeconds", "required", "showOnFocus", "showWeek", "dataType", "selectionMode", "maxDateCount", "showButtonBar", "todayButtonStyleClass", "clearButtonStyleClass", "autoZIndex", "baseZIndex", "panelStyleClass", "panelStyle", "keepInvalid", "hideOnDateTimeSelect", "numberOfMonths", "view", "touchUI", "timeSeparator", "focusTrap", "firstDayOfWeek", "showTransitionOptions", "hideTransitionOptions", "tabindex", "defaultDate", "minDate", "maxDate", "disabledDates", "disabledDays", "yearRange", "showTime", "locale"], outputs: ["onFocus", "onBlur", "onClose", "onSelect", "onInput", "onTodayClick", "onClearClick", "onMonthChange", "onYearChange", "onClickOutside", "onShow"] }], directives: [{ type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i3.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i3.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.0", ngImport: i0, type: TimeonlyControlComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-timeonly-control', template: "<div class=\"group-date\" [ngClass]=\" element.columnValue ? 'valid' : 'invalid' \">\n    <label class=\"text-nowrap label-text\">{{element.columnLabel}} <span style=\"color:red\"\n            *ngIf=\"element.isRequire\">*</span></label>\n    <div>\n        <p-calendar placeholder=\"DD/MM/YYYY\" [appendTo]=\"'body'\" [baseZIndex]=\"101\" [disabled]=\"element.isDisable\"\n                [(ngModel)]=\"element.columnValue\" [timeOnly]=\"true\" inputId=\"timeonly\"\n                [required]=\"element.isRequire && element.isVisiable && !element.isEmpty\" placeholder=\"HH:mm\" name={{element.field_name}}>\n              </p-calendar>\n\n        <div *ngIf=\"modelFields[element.field_name]?.isRequire && submit && modelFields[element.field_name]?.error\"\n            class=\"alert-validation alert-danger\">\n            <div [hidden]=\"!modelFields[element.field_name]?.error\">\n                {{modelFields[element.field_name]?.message}}\n            </div>\n        </div>\n    </div>\n</div>", styles: [""] }]
        }], ctorParameters: function () { return []; }, propDecorators: { element: [{
                type: Input
            }], modelFields: [{
                type: Input
            }], dataView: [{
                type: Input
            }], detail: [{
                type: Input
            }], submit: [{
                type: Input
            }], callbackTimeonly: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZW9ubHktY29udHJvbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91bmktY29udHJvbC9zcmMvbGliL3RpbWVvbmx5LWNvbnRyb2wvdGltZW9ubHktY29udHJvbC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91bmktY29udHJvbC9zcmMvbGliL3RpbWVvbmx5LWNvbnRyb2wvdGltZW9ubHktY29udHJvbC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQVUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7OztBQU8vRSxNQUFNLE9BQU8sd0JBQXdCO0lBT25DO1FBRlMsV0FBTSxHQUFHLEtBQUssQ0FBQztRQUNkLHFCQUFnQixHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFFckQsZUFBVSxHQUFHLEtBQUssQ0FBQztJQURILENBQUM7SUFFakIsUUFBUTtJQUNSLENBQUM7SUFFRCxhQUFhLENBQUMsS0FBSyxFQUFFLFVBQVUsRUFBRSxPQUFPO1FBQ3RDLElBQUksQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDLENBQUMsU0FBUyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO1FBQ3hILElBQUksQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFBO1FBQ3pHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUM7WUFDekIsS0FBSyxFQUFFLE9BQU87WUFDZCxLQUFLLEVBQUUsS0FBSztZQUNaLEtBQUssRUFBRSxVQUFVO1NBQ2xCLENBQUMsQ0FBQTtJQUNKLENBQUM7SUFFRCxVQUFVLENBQUMsS0FBSztRQUNkLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRTtZQUM3QixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztTQUN4QjtJQUNILENBQUM7SUFFRCxhQUFhLENBQUMsS0FBSztRQUNqQixJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFO1lBQzVCLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO1NBQ3hCO2FBQU07WUFDTCxJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQztTQUN6QjtJQUNILENBQUM7O3FIQWxDVSx3QkFBd0I7eUdBQXhCLHdCQUF3QixxT0NQckMsNitCQWdCTTsyRkRUTyx3QkFBd0I7a0JBTHBDLFNBQVM7K0JBQ0Usc0JBQXNCOzBFQUt2QixPQUFPO3NCQUFmLEtBQUs7Z0JBQ0csV0FBVztzQkFBbkIsS0FBSztnQkFDRyxRQUFRO3NCQUFoQixLQUFLO2dCQUNHLE1BQU07c0JBQWQsS0FBSztnQkFDRyxNQUFNO3NCQUFkLEtBQUs7Z0JBQ0ksZ0JBQWdCO3NCQUF6QixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkluaXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdsaWItdGltZW9ubHktY29udHJvbCcsXG4gIHRlbXBsYXRlVXJsOiAnLi90aW1lb25seS1jb250cm9sLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vdGltZW9ubHktY29udHJvbC5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgVGltZW9ubHlDb250cm9sQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KCkgZWxlbWVudDtcbiAgQElucHV0KCkgbW9kZWxGaWVsZHM7XG4gIEBJbnB1dCgpIGRhdGFWaWV3O1xuICBASW5wdXQoKSBkZXRhaWw7XG4gIEBJbnB1dCgpIHN1Ym1pdCA9IGZhbHNlO1xuICBAT3V0cHV0KCkgY2FsbGJhY2tUaW1lb25seSA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuICBjb25zdHJ1Y3RvcigpIHsgfVxuICBjbGFzc0lucHV0ID0gZmFsc2U7XG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICB9XG5cbiAgb25DaGFuZ2VWYWx1ZSh2YWx1ZSwgZmllbGRfbmFtZSwgZWxlbWVudCkge1xuICAgIHRoaXMubW9kZWxGaWVsZHNbZmllbGRfbmFtZV0uZXJyb3IgPSB0aGlzLm1vZGVsRmllbGRzW2ZpZWxkX25hbWVdLmlzUmVxdWlyZSAmJiAhdGhpcy5lbGVtZW50LmNvbHVtblZhbHVlID8gdHJ1ZSA6IGZhbHNlO1xuICAgIHRoaXMubW9kZWxGaWVsZHNbZmllbGRfbmFtZV0ubWVzc2FnZSA9IHRoaXMubW9kZWxGaWVsZHNbZmllbGRfbmFtZV0uZXJyb3IgPyAnVHLGsOG7nW5nIGLhuq90IGJ14buZYyBuaOG6rXAgIScgOiAnJ1xuICAgIHRoaXMuY2FsbGJhY2tUaW1lb25seS5lbWl0KHtcbiAgICAgIGV2ZW50OiBlbGVtZW50LFxuICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgZmllbGQ6IGZpZWxkX25hbWVcbiAgICB9KVxuICB9XG5cbiAgaW5wdXRGb2N1cyhldmVudCkge1xuICAgIGlmICghdGhpcy5lbGVtZW50LmNvbHVtblZhbHVlKSB7XG4gICAgICB0aGlzLmNsYXNzSW5wdXQgPSB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIGlucHV0Rm9jdXNPdXQoZXZlbnQpIHtcbiAgICBpZiAodGhpcy5lbGVtZW50LmNvbHVtblZhbHVlKSB7XG4gICAgICB0aGlzLmNsYXNzSW5wdXQgPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmNsYXNzSW5wdXQgPSBmYWxzZTtcbiAgICB9XG4gIH1cblxufVxuIiwiPGRpdiBjbGFzcz1cImdyb3VwLWRhdGVcIiBbbmdDbGFzc109XCIgZWxlbWVudC5jb2x1bW5WYWx1ZSA/ICd2YWxpZCcgOiAnaW52YWxpZCcgXCI+XG4gICAgPGxhYmVsIGNsYXNzPVwidGV4dC1ub3dyYXAgbGFiZWwtdGV4dFwiPnt7ZWxlbWVudC5jb2x1bW5MYWJlbH19IDxzcGFuIHN0eWxlPVwiY29sb3I6cmVkXCJcbiAgICAgICAgICAgICpuZ0lmPVwiZWxlbWVudC5pc1JlcXVpcmVcIj4qPC9zcGFuPjwvbGFiZWw+XG4gICAgPGRpdj5cbiAgICAgICAgPHAtY2FsZW5kYXIgcGxhY2Vob2xkZXI9XCJERC9NTS9ZWVlZXCIgW2FwcGVuZFRvXT1cIidib2R5J1wiIFtiYXNlWkluZGV4XT1cIjEwMVwiIFtkaXNhYmxlZF09XCJlbGVtZW50LmlzRGlzYWJsZVwiXG4gICAgICAgICAgICAgICAgWyhuZ01vZGVsKV09XCJlbGVtZW50LmNvbHVtblZhbHVlXCIgW3RpbWVPbmx5XT1cInRydWVcIiBpbnB1dElkPVwidGltZW9ubHlcIlxuICAgICAgICAgICAgICAgIFtyZXF1aXJlZF09XCJlbGVtZW50LmlzUmVxdWlyZSAmJiBlbGVtZW50LmlzVmlzaWFibGUgJiYgIWVsZW1lbnQuaXNFbXB0eVwiIHBsYWNlaG9sZGVyPVwiSEg6bW1cIiBuYW1lPXt7ZWxlbWVudC5maWVsZF9uYW1lfX0+XG4gICAgICAgICAgICAgIDwvcC1jYWxlbmRhcj5cblxuICAgICAgICA8ZGl2ICpuZ0lmPVwibW9kZWxGaWVsZHNbZWxlbWVudC5maWVsZF9uYW1lXT8uaXNSZXF1aXJlICYmIHN1Ym1pdCAmJiBtb2RlbEZpZWxkc1tlbGVtZW50LmZpZWxkX25hbWVdPy5lcnJvclwiXG4gICAgICAgICAgICBjbGFzcz1cImFsZXJ0LXZhbGlkYXRpb24gYWxlcnQtZGFuZ2VyXCI+XG4gICAgICAgICAgICA8ZGl2IFtoaWRkZW5dPVwiIW1vZGVsRmllbGRzW2VsZW1lbnQuZmllbGRfbmFtZV0/LmVycm9yXCI+XG4gICAgICAgICAgICAgICAge3ttb2RlbEZpZWxkc1tlbGVtZW50LmZpZWxkX25hbWVdPy5tZXNzYWdlfX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbjwvZGl2PiJdfQ==