import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "primeng/fileupload";
import * as i2 from "@angular/common";
import * as i3 from "primeng/api";
export class LinkurlControlComponent {
    constructor() {
        this.isUploadMultiple = true;
        this.submit = false;
        this.isUpload = false;
        this.callbackDatetimes = new EventEmitter();
        this.classInput = false;
    }
    ngOnInit() {
    }
    onChangeValue(event, field_name, element) {
        this.isUpload = true;
        this.modelFields[field_name].error = this.modelFields[field_name].isRequire && !this.element.columnValue ? true : false;
        this.modelFields[field_name].message = this.modelFields[field_name].error ? 'Trường bắt buộc nhập !' : '';
        if (event.currentFiles.length > 0) {
            this.callbackDatetimes.emit({
                event: element,
                value: event,
                field: field_name
            });
            setTimeout(() => {
                this.isUpload = false;
            }, 500);
        }
    }
    inputFocus(event) {
        if (!this.element.columnValue) {
            this.classInput = true;
        }
    }
    inputFocusOut(event) {
        if (this.element.columnValue) {
            this.classInput = true;
        }
        else {
            this.classInput = false;
        }
    }
}
LinkurlControlComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.0", ngImport: i0, type: LinkurlControlComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
LinkurlControlComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.0.0", type: LinkurlControlComponent, selector: "lib-linkurl-control", inputs: { element: "element", isUploadMultiple: "isUploadMultiple", modelFields: "modelFields", dataView: "dataView", detail: "detail", submit: "submit" }, outputs: { callbackDatetimes: "callbackDatetimes" }, ngImport: i0, template: "<div class=\"linkurl-drag\">\n    <div class=\"wrap-upload\">\n              <p-fileUpload accept=\"image/jpeg,image/png,image/jpg,image/gif,.mp4,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/pdf,application/msword,application/vnd.ms-powerpoint,application/vnd.openxmlformats-officedocument.wordprocessingml.document\" *ngIf=\"!isUpload\" [chooseLabel]=\"''\" [chooseIcon]=\"''\"  \n              [multiple]=\"isUploadMultiple ? true : null\" [showUploadButton]=\"false\" [showCancelButton]=\"false\" [customUpload]=\"true\" name=\"demo[]\" \n               (onSelect)=\"onChangeValue($event, element.field_name, element)\" [maxFileSize]=\"10000000\">\n                  <ng-template pTemplate=\"toolbar\">\n                  </ng-template>\n                  <ng-template pTemplate=\"content\">\n                    <div class=\"content-upload text-center\">\n                          <h3 style=\"color: #182850;\">Ta\u0309i t\u00EA\u0323p & Ke\u0301o t\u00EA\u0323p</h3>\n                          <p>Supported formates: JPEG, PNG, GIF, MP4, PDF, PSD, AI, Word, PPT</p>\n                    </div>\n                  </ng-template>\n              </p-fileUpload>\n            </div>\n            <div class=\"file-uploaded\" *ngIf=\"element.columnValue && element.columnValue.length > 0\">\n              <h3 class=\"uploaded-title\">\u0110\u00E3 upload xong {{ element.columnValue.length }} file</h3>\n              <!-- <ul *ngIf=\"uploadedFiles.length > 0\">\n                  <li class=\"d-flex middle bet\" *ngFor=\"let file of uploadedFiles; let i=index\">{{file}} \n                    <span (click)=\"removeImage(i)\">\n                        <svg width=\"12\" height=\"14\" viewBox=\"0 0 12 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                          <path d=\"M9.33366 5.33341V12.0001H2.66699V5.33341H9.33366ZM8.33366 0.666748H3.66699L3.00033 1.33341H0.666992V2.66675H11.3337V1.33341H9.00033L8.33366 0.666748ZM10.667 4.00008H1.33366V12.0001C1.33366 12.7334 1.93366 13.3334 2.66699 13.3334H9.33366C10.067 13.3334 10.667 12.7334 10.667 12.0001V4.00008Z\" fill=\"#FF3B49\"/>\n                          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.00033 10.3334V6.66675H5.33366V10.3334H4.00033Z\" fill=\"#FF3B49\"/>\n                          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.66699 10.3334V6.66675H8.00033V10.3334H6.66699Z\" fill=\"#FF3B49\"/>\n                        </svg>\n                    </span>\n                  </li>\n              </ul> -->\n            </div>\n            <!-- <div class=\"file-uploaded\" *ngIf=\"element.columnValue && (element.columnValue.length > 0) && (uploadedFiles.length === 0)\">\n            <ul>\n                <li class=\"d-flex middle bet\" *ngFor=\"let file of element.columnValue; let i=index\">{{file}} \n                  <span (click)=\"removeImage1(i)\">\n                      <svg width=\"12\" height=\"14\" viewBox=\"0 0 12 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M9.33366 5.33341V12.0001H2.66699V5.33341H9.33366ZM8.33366 0.666748H3.66699L3.00033 1.33341H0.666992V2.66675H11.3337V1.33341H9.00033L8.33366 0.666748ZM10.667 4.00008H1.33366V12.0001C1.33366 12.7334 1.93366 13.3334 2.66699 13.3334H9.33366C10.067 13.3334 10.667 12.7334 10.667 12.0001V4.00008Z\" fill=\"#FF3B49\"/>\n                        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.00033 10.3334V6.66675H5.33366V10.3334H4.00033Z\" fill=\"#FF3B49\"/>\n                        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.66699 10.3334V6.66675H8.00033V10.3334H6.66699Z\" fill=\"#FF3B49\"/>\n                      </svg>\n                  </span>\n                </li>\n            </ul>\n            </div> -->\n        </div>", styles: [""], components: [{ type: i1.FileUpload, selector: "p-fileUpload", inputs: ["name", "url", "method", "multiple", "accept", "disabled", "auto", "withCredentials", "maxFileSize", "invalidFileSizeMessageSummary", "invalidFileSizeMessageDetail", "invalidFileTypeMessageSummary", "invalidFileTypeMessageDetail", "invalidFileLimitMessageDetail", "invalidFileLimitMessageSummary", "style", "styleClass", "previewWidth", "chooseLabel", "uploadLabel", "cancelLabel", "chooseIcon", "uploadIcon", "cancelIcon", "showUploadButton", "showCancelButton", "mode", "headers", "customUpload", "fileLimit", "files"], outputs: ["onBeforeUpload", "onSend", "onUpload", "onError", "onClear", "onRemove", "onSelect", "onProgress", "uploadHandler"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.PrimeTemplate, selector: "[pTemplate]", inputs: ["type", "pTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.0", ngImport: i0, type: LinkurlControlComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-linkurl-control', template: "<div class=\"linkurl-drag\">\n    <div class=\"wrap-upload\">\n              <p-fileUpload accept=\"image/jpeg,image/png,image/jpg,image/gif,.mp4,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/pdf,application/msword,application/vnd.ms-powerpoint,application/vnd.openxmlformats-officedocument.wordprocessingml.document\" *ngIf=\"!isUpload\" [chooseLabel]=\"''\" [chooseIcon]=\"''\"  \n              [multiple]=\"isUploadMultiple ? true : null\" [showUploadButton]=\"false\" [showCancelButton]=\"false\" [customUpload]=\"true\" name=\"demo[]\" \n               (onSelect)=\"onChangeValue($event, element.field_name, element)\" [maxFileSize]=\"10000000\">\n                  <ng-template pTemplate=\"toolbar\">\n                  </ng-template>\n                  <ng-template pTemplate=\"content\">\n                    <div class=\"content-upload text-center\">\n                          <h3 style=\"color: #182850;\">Ta\u0309i t\u00EA\u0323p & Ke\u0301o t\u00EA\u0323p</h3>\n                          <p>Supported formates: JPEG, PNG, GIF, MP4, PDF, PSD, AI, Word, PPT</p>\n                    </div>\n                  </ng-template>\n              </p-fileUpload>\n            </div>\n            <div class=\"file-uploaded\" *ngIf=\"element.columnValue && element.columnValue.length > 0\">\n              <h3 class=\"uploaded-title\">\u0110\u00E3 upload xong {{ element.columnValue.length }} file</h3>\n              <!-- <ul *ngIf=\"uploadedFiles.length > 0\">\n                  <li class=\"d-flex middle bet\" *ngFor=\"let file of uploadedFiles; let i=index\">{{file}} \n                    <span (click)=\"removeImage(i)\">\n                        <svg width=\"12\" height=\"14\" viewBox=\"0 0 12 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                          <path d=\"M9.33366 5.33341V12.0001H2.66699V5.33341H9.33366ZM8.33366 0.666748H3.66699L3.00033 1.33341H0.666992V2.66675H11.3337V1.33341H9.00033L8.33366 0.666748ZM10.667 4.00008H1.33366V12.0001C1.33366 12.7334 1.93366 13.3334 2.66699 13.3334H9.33366C10.067 13.3334 10.667 12.7334 10.667 12.0001V4.00008Z\" fill=\"#FF3B49\"/>\n                          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.00033 10.3334V6.66675H5.33366V10.3334H4.00033Z\" fill=\"#FF3B49\"/>\n                          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.66699 10.3334V6.66675H8.00033V10.3334H6.66699Z\" fill=\"#FF3B49\"/>\n                        </svg>\n                    </span>\n                  </li>\n              </ul> -->\n            </div>\n            <!-- <div class=\"file-uploaded\" *ngIf=\"element.columnValue && (element.columnValue.length > 0) && (uploadedFiles.length === 0)\">\n            <ul>\n                <li class=\"d-flex middle bet\" *ngFor=\"let file of element.columnValue; let i=index\">{{file}} \n                  <span (click)=\"removeImage1(i)\">\n                      <svg width=\"12\" height=\"14\" viewBox=\"0 0 12 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M9.33366 5.33341V12.0001H2.66699V5.33341H9.33366ZM8.33366 0.666748H3.66699L3.00033 1.33341H0.666992V2.66675H11.3337V1.33341H9.00033L8.33366 0.666748ZM10.667 4.00008H1.33366V12.0001C1.33366 12.7334 1.93366 13.3334 2.66699 13.3334H9.33366C10.067 13.3334 10.667 12.7334 10.667 12.0001V4.00008Z\" fill=\"#FF3B49\"/>\n                        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.00033 10.3334V6.66675H5.33366V10.3334H4.00033Z\" fill=\"#FF3B49\"/>\n                        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.66699 10.3334V6.66675H8.00033V10.3334H6.66699Z\" fill=\"#FF3B49\"/>\n                      </svg>\n                  </span>\n                </li>\n            </ul>\n            </div> -->\n        </div>", styles: [""] }]
        }], ctorParameters: function () { return []; }, propDecorators: { element: [{
                type: Input
            }], isUploadMultiple: [{
                type: Input
            }], modelFields: [{
                type: Input
            }], dataView: [{
                type: Input
            }], detail: [{
                type: Input
            }], submit: [{
                type: Input
            }], callbackDatetimes: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,