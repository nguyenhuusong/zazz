import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "primeng/dropdown";
import * as i2 from "@angular/common";
import * as i3 from "@angular/forms";
import * as i4 from "primeng/api";
export class DropdownControlComponent {
    constructor() {
        this.submit = false;
        this.callbackDropdown = new EventEmitter();
        this.classInput = false;
    }
    ngOnInit() {
    }
    onChangeValue(value, field_name, element) {
        this.modelFields[field_name].error = this.modelFields[field_name].isRequire && !this.element.columnValue ? true : false;
        this.modelFields[field_name].message = this.modelFields[field_name].error ? 'Trường bắt buộc nhập !' : '';
        this.callbackDropdown.emit({
            event: element,
            value: value,
            field: field_name
        });
    }
    inputFocus(event) {
        if (!this.element.columnValue) {
            this.classInput = true;
        }
    }
    inputFocusOut(event) {
        if (this.element.columnValue) {
            this.classInput = true;
        }
        else {
            this.classInput = false;
        }
    }
}
DropdownControlComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.0", ngImport: i0, type: DropdownControlComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
DropdownControlComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.0.0", type: DropdownControlComponent, selector: "lib-dropdown-control", inputs: { element: "element", modelFields: "modelFields", dataView: "dataView", detail: "detail", submit: "submit" }, outputs: { callbackDropdown: "callbackDropdown" }, ngImport: i0, template: "<div class=\"group-dropdown\" [ngClass]=\" element.columnValue ? 'valid' : 'invalid' \">\n    <label class=\"text-nowrap label-text\">{{element.columnLabel}} <span style=\"color:red\"\n            *ngIf=\"element.isRequire\">*</span></label>\n    <div>\n        <p-dropdown [appendTo]=\"'body'\" [baseZIndex]=\"100\" [autoDisplayFirst]=\"false\" [disabled]=\"element.isDisable\"\n            [options]=\"element.options\" (onChange)=\"onChangeValue($event.value, element.field_name, element)\"\n            [required]=\"element.isRequire && element.isVisiable && !element.isEmpty\" [(ngModel)]=\"element.columnValue\"\n            name={{element.field_name}} [filter]=\"true\">\n            <ng-template let-item pTemplate=\"selectedItem\">\n                <span style=\"vertical-align:middle;\">{{item.label}}</span>\n            </ng-template>\n            <ng-template let-car pTemplate=\"item\">\n                <div class=\"ui-helper-clearfix\" style=\"position: relative;height: 25px;\">\n                    <div style=\"font-size:14px;float:right;\">{{car.label}}</div>\n                </div>\n            </ng-template>\n        </p-dropdown>\n        <div *ngIf=\"modelFields[element.field_name]?.isRequire && submit && modelFields[element.field_name]?.error\"\n            class=\"alert-validation alert-danger\">\n            <div [hidden]=\"!modelFields[element.field_name]?.error\">\n                {{modelFields[element.field_name]?.message}}\n            </div>\n        </div>\n    </div>\n</div>", styles: [""], components: [{ type: i1.Dropdown, selector: "p-dropdown", inputs: ["scrollHeight", "filter", "name", "style", "panelStyle", "styleClass", "panelStyleClass", "readonly", "required", "editable", "appendTo", "tabindex", "placeholder", "filterPlaceholder", "filterLocale", "inputId", "selectId", "dataKey", "filterBy", "autofocus", "resetFilterOnHide", "dropdownIcon", "optionLabel", "optionValue", "optionDisabled", "optionGroupLabel", "optionGroupChildren", "autoDisplayFirst", "group", "showClear", "emptyFilterMessage", "emptyMessage", "virtualScroll", "itemSize", "autoZIndex", "baseZIndex", "showTransitionOptions", "hideTransitionOptions", "ariaFilterLabel", "ariaLabelledBy", "filterMatchMode", "maxlength", "tooltip", "tooltipPosition", "tooltipPositionStyle", "tooltipStyleClass", "autofocusFilter", "disabled", "options", "filterValue"], outputs: ["onChange", "onFilter", "onFocus", "onBlur", "onClick", "onShow", "onHide", "onClear"] }], directives: [{ type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i3.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i4.PrimeTemplate, selector: "[pTemplate]", inputs: ["type", "pTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.0", ngImport: i0, type: DropdownControlComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-dropdown-control', template: "<div class=\"group-dropdown\" [ngClass]=\" element.columnValue ? 'valid' : 'invalid' \">\n    <label class=\"text-nowrap label-text\">{{element.columnLabel}} <span style=\"color:red\"\n            *ngIf=\"element.isRequire\">*</span></label>\n    <div>\n        <p-dropdown [appendTo]=\"'body'\" [baseZIndex]=\"100\" [autoDisplayFirst]=\"false\" [disabled]=\"element.isDisable\"\n            [options]=\"element.options\" (onChange)=\"onChangeValue($event.value, element.field_name, element)\"\n            [required]=\"element.isRequire && element.isVisiable && !element.isEmpty\" [(ngModel)]=\"element.columnValue\"\n            name={{element.field_name}} [filter]=\"true\">\n            <ng-template let-item pTemplate=\"selectedItem\">\n                <span style=\"vertical-align:middle;\">{{item.label}}</span>\n            </ng-template>\n            <ng-template let-car pTemplate=\"item\">\n                <div class=\"ui-helper-clearfix\" style=\"position: relative;height: 25px;\">\n                    <div style=\"font-size:14px;float:right;\">{{car.label}}</div>\n                </div>\n            </ng-template>\n        </p-dropdown>\n        <div *ngIf=\"modelFields[element.field_name]?.isRequire && submit && modelFields[element.field_name]?.error\"\n            class=\"alert-validation alert-danger\">\n            <div [hidden]=\"!modelFields[element.field_name]?.error\">\n                {{modelFields[element.field_name]?.message}}\n            </div>\n        </div>\n    </div>\n</div>", styles: [""] }]
        }], ctorParameters: function () { return []; }, propDecorators: { element: [{
                type: Input
            }], modelFields: [{
                type: Input
            }], dataView: [{
                type: Input
            }], detail: [{
                type: Input
            }], submit: [{
                type: Input
            }], callbackDropdown: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd24tY29udHJvbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91bmktY29udHJvbC9zcmMvbGliL2Ryb3Bkb3duLWNvbnRyb2wvZHJvcGRvd24tY29udHJvbC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91bmktY29udHJvbC9zcmMvbGliL2Ryb3Bkb3duLWNvbnRyb2wvZHJvcGRvd24tY29udHJvbC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQVUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7Ozs7QUFPL0UsTUFBTSxPQUFPLHdCQUF3QjtJQU9uQztRQUZTLFdBQU0sR0FBRyxLQUFLLENBQUM7UUFDZCxxQkFBZ0IsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO1FBRXJELGVBQVUsR0FBRyxLQUFLLENBQUM7SUFESCxDQUFDO0lBRWpCLFFBQVE7SUFDUixDQUFDO0lBRUQsYUFBYSxDQUFDLEtBQUssRUFBRSxVQUFVLEVBQUUsT0FBTztRQUN0QyxJQUFJLENBQUMsV0FBVyxDQUFDLFVBQVUsQ0FBQyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLFVBQVUsQ0FBQyxDQUFDLFNBQVMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztRQUN4SCxJQUFJLENBQUMsV0FBVyxDQUFDLFVBQVUsQ0FBQyxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLFVBQVUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsd0JBQXdCLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQTtRQUN6RyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDO1lBQ3pCLEtBQUssRUFBRSxPQUFPO1lBQ2QsS0FBSyxFQUFFLEtBQUs7WUFDWixLQUFLLEVBQUUsVUFBVTtTQUNsQixDQUFDLENBQUE7SUFDSixDQUFDO0lBRUQsVUFBVSxDQUFDLEtBQUs7UUFDZCxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUU7WUFDN0IsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7U0FDeEI7SUFDSCxDQUFDO0lBRUQsYUFBYSxDQUFDLEtBQUs7UUFDakIsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRTtZQUM1QixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztTQUN4QjthQUFNO1lBQ0wsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7U0FDekI7SUFDSCxDQUFDOztxSEFsQ1Usd0JBQXdCO3lHQUF4Qix3QkFBd0IscU9DUHJDLCsrQ0F3Qk07MkZEakJPLHdCQUF3QjtrQkFMcEMsU0FBUzsrQkFDRSxzQkFBc0I7MEVBS3ZCLE9BQU87c0JBQWYsS0FBSztnQkFDRyxXQUFXO3NCQUFuQixLQUFLO2dCQUNHLFFBQVE7c0JBQWhCLEtBQUs7Z0JBQ0csTUFBTTtzQkFBZCxLQUFLO2dCQUNHLE1BQU07c0JBQWQsS0FBSztnQkFDSSxnQkFBZ0I7c0JBQXpCLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uSW5pdCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2xpYi1kcm9wZG93bi1jb250cm9sJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2Ryb3Bkb3duLWNvbnRyb2wuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9kcm9wZG93bi1jb250cm9sLmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBEcm9wZG93bkNvbnRyb2xDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBASW5wdXQoKSBlbGVtZW50O1xuICBASW5wdXQoKSBtb2RlbEZpZWxkcztcbiAgQElucHV0KCkgZGF0YVZpZXc7XG4gIEBJbnB1dCgpIGRldGFpbDtcbiAgQElucHV0KCkgc3VibWl0ID0gZmFsc2U7XG4gIEBPdXRwdXQoKSBjYWxsYmFja0Ryb3Bkb3duID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG4gIGNvbnN0cnVjdG9yKCkgeyB9XG4gIGNsYXNzSW5wdXQgPSBmYWxzZTtcbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gIH1cblxuICBvbkNoYW5nZVZhbHVlKHZhbHVlLCBmaWVsZF9uYW1lLCBlbGVtZW50KSB7XG4gICAgdGhpcy5tb2RlbEZpZWxkc1tmaWVsZF9uYW1lXS5lcnJvciA9IHRoaXMubW9kZWxGaWVsZHNbZmllbGRfbmFtZV0uaXNSZXF1aXJlICYmICF0aGlzLmVsZW1lbnQuY29sdW1uVmFsdWUgPyB0cnVlIDogZmFsc2U7XG4gICAgdGhpcy5tb2RlbEZpZWxkc1tmaWVsZF9uYW1lXS5tZXNzYWdlID0gdGhpcy5tb2RlbEZpZWxkc1tmaWVsZF9uYW1lXS5lcnJvciA/ICdUcsaw4budbmcgYuG6r3QgYnXhu5ljIG5o4bqtcCAhJyA6ICcnXG4gICAgdGhpcy5jYWxsYmFja0Ryb3Bkb3duLmVtaXQoe1xuICAgICAgZXZlbnQ6IGVsZW1lbnQsXG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBmaWVsZDogZmllbGRfbmFtZVxuICAgIH0pXG4gIH1cblxuICBpbnB1dEZvY3VzKGV2ZW50KSB7XG4gICAgaWYgKCF0aGlzLmVsZW1lbnQuY29sdW1uVmFsdWUpIHtcbiAgICAgIHRoaXMuY2xhc3NJbnB1dCA9IHRydWU7XG4gICAgfVxuICB9XG5cbiAgaW5wdXRGb2N1c091dChldmVudCkge1xuICAgIGlmICh0aGlzLmVsZW1lbnQuY29sdW1uVmFsdWUpIHtcbiAgICAgIHRoaXMuY2xhc3NJbnB1dCA9IHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuY2xhc3NJbnB1dCA9IGZhbHNlO1xuICAgIH1cbiAgfVxuXG59XG4iLCI8ZGl2IGNsYXNzPVwiZ3JvdXAtZHJvcGRvd25cIiBbbmdDbGFzc109XCIgZWxlbWVudC5jb2x1bW5WYWx1ZSA/ICd2YWxpZCcgOiAnaW52YWxpZCcgXCI+XG4gICAgPGxhYmVsIGNsYXNzPVwidGV4dC1ub3dyYXAgbGFiZWwtdGV4dFwiPnt7ZWxlbWVudC5jb2x1bW5MYWJlbH19IDxzcGFuIHN0eWxlPVwiY29sb3I6cmVkXCJcbiAgICAgICAgICAgICpuZ0lmPVwiZWxlbWVudC5pc1JlcXVpcmVcIj4qPC9zcGFuPjwvbGFiZWw+XG4gICAgPGRpdj5cbiAgICAgICAgPHAtZHJvcGRvd24gW2FwcGVuZFRvXT1cIidib2R5J1wiIFtiYXNlWkluZGV4XT1cIjEwMFwiIFthdXRvRGlzcGxheUZpcnN0XT1cImZhbHNlXCIgW2Rpc2FibGVkXT1cImVsZW1lbnQuaXNEaXNhYmxlXCJcbiAgICAgICAgICAgIFtvcHRpb25zXT1cImVsZW1lbnQub3B0aW9uc1wiIChvbkNoYW5nZSk9XCJvbkNoYW5nZVZhbHVlKCRldmVudC52YWx1ZSwgZWxlbWVudC5maWVsZF9uYW1lLCBlbGVtZW50KVwiXG4gICAgICAgICAgICBbcmVxdWlyZWRdPVwiZWxlbWVudC5pc1JlcXVpcmUgJiYgZWxlbWVudC5pc1Zpc2lhYmxlICYmICFlbGVtZW50LmlzRW1wdHlcIiBbKG5nTW9kZWwpXT1cImVsZW1lbnQuY29sdW1uVmFsdWVcIlxuICAgICAgICAgICAgbmFtZT17e2VsZW1lbnQuZmllbGRfbmFtZX19IFtmaWx0ZXJdPVwidHJ1ZVwiPlxuICAgICAgICAgICAgPG5nLXRlbXBsYXRlIGxldC1pdGVtIHBUZW1wbGF0ZT1cInNlbGVjdGVkSXRlbVwiPlxuICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPVwidmVydGljYWwtYWxpZ246bWlkZGxlO1wiPnt7aXRlbS5sYWJlbH19PC9zcGFuPlxuICAgICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgICAgICAgICAgIDxuZy10ZW1wbGF0ZSBsZXQtY2FyIHBUZW1wbGF0ZT1cIml0ZW1cIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidWktaGVscGVyLWNsZWFyZml4XCIgc3R5bGU9XCJwb3NpdGlvbjogcmVsYXRpdmU7aGVpZ2h0OiAyNXB4O1wiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVwiZm9udC1zaXplOjE0cHg7ZmxvYXQ6cmlnaHQ7XCI+e3tjYXIubGFiZWx9fTwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgICAgICAgPC9wLWRyb3Bkb3duPlxuICAgICAgICA8ZGl2ICpuZ0lmPVwibW9kZWxGaWVsZHNbZWxlbWVudC5maWVsZF9uYW1lXT8uaXNSZXF1aXJlICYmIHN1Ym1pdCAmJiBtb2RlbEZpZWxkc1tlbGVtZW50LmZpZWxkX25hbWVdPy5lcnJvclwiXG4gICAgICAgICAgICBjbGFzcz1cImFsZXJ0LXZhbGlkYXRpb24gYWxlcnQtZGFuZ2VyXCI+XG4gICAgICAgICAgICA8ZGl2IFtoaWRkZW5dPVwiIW1vZGVsRmllbGRzW2VsZW1lbnQuZmllbGRfbmFtZV0/LmVycm9yXCI+XG4gICAgICAgICAgICAgICAge3ttb2RlbEZpZWxkc1tlbGVtZW50LmZpZWxkX25hbWVdPy5tZXNzYWdlfX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbjwvZGl2PiJdfQ==